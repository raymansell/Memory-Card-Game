{"version":3,"sources":["data.js","Header.js","Cards.js","App.js","index.js"],"names":["data","id","image","Header","currentScore","highestScore","className","Cards","characters","handleClick","characterCards","map","character","src","alt","onClick","App","useState","charactersArray","setCharactersArray","gameFlow","setGameFlow","setCurrentScore","setHighestScore","shuffleArray","arr","newArr","slice","i","length","j","Math","floor","random","useEffect","highest","localStorage","getItem","parseInt","shuffledArray","setItem","toString","move","includes","prevHighest","prevScore","prevGameFlow","prevArr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA+DeA,G,MA/DF,CACX,CACEC,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,EACJC,MAAO,kBAET,CACED,GAAI,GACJC,MAAO,mBAET,CACED,GAAI,GACJC,MAAO,mBAET,CACED,GAAI,GACJC,MAAO,mBAET,CACED,GAAI,GACJC,MAAO,mBAET,CACED,GAAI,GACJC,MAAO,mBAET,CACED,GAAI,GACJC,MAAO,qBC5CIC,MAbf,YAAiD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC9B,OACE,mCACE,kDACA,sBAAKC,UAAU,SAAf,UACE,qBAAIA,UAAU,UAAd,4BAAwCF,KACxC,qBAAIE,UAAU,UAAd,4BAAwCD,QAE1C,+DCUSE,MAlBf,YAA6C,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YACrBC,EAAiBF,EAAWG,KAAI,SAACC,GAAe,IAC5CV,EAAcU,EAAdV,MAAOD,EAAOW,EAAPX,GACf,OACE,qBAAcK,UAAU,OAAxB,SACE,qBACEO,IAAKX,EACLY,IAAKN,EAAWP,GAChBK,UAAU,OACVS,QAAS,kBAAMN,EAAYR,OALrBA,MAWd,OAAO,yBAASK,UAAU,aAAnB,SAAiCI,KC6C3BM,MAxDf,WAAgB,IAAD,EACiCC,mBAAST,GAD1C,mBACNU,EADM,KACWC,EADX,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAG2BJ,mBAAS,GAHpC,mBAGNb,EAHM,KAGQkB,EAHR,OAI2BL,mBAAS,GAJpC,mBAINZ,EAJM,KAIQkB,EAJR,KAMPC,EAAe,SAACC,GAEpB,IADA,IAAMC,EAASD,EAAIE,QACVC,EAAIF,EAAOG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADA,EAEjB,CAACF,EAAOI,GAAIJ,EAAOE,IAA3CF,EAAOE,GAFkC,KAE9BF,EAAOI,GAFuB,KAI5C,OAAOJ,GAqCT,OAhBAQ,qBAAU,WAER,IAAMC,EAAUC,aAAaC,QAAQ,gBACjCF,GACFZ,EAAgBe,SAASH,IAG3B,IAAMI,EAAgBf,EAAahB,GACnCW,EAAmBoB,KAClB,IAEHL,qBAAU,WAERE,aAAaI,QAAQ,eAAgBnC,EAAaoC,cACjD,CAACpC,IAGF,qCACE,cAAC,EAAD,CAAQD,aAAcA,EAAcC,aAAcA,IAClD,cAAC,EAAD,CAAOG,WAAYU,EAAiBT,YArCpB,SAACiC,GACftB,EAASuB,SAASD,IACpBpB,EAAgB,GAChBD,EAAY,MAEZE,GAAgB,SAACqB,GACf,OAAOA,IAAgBxC,EAAewC,EAAc,EAAIA,KAG1DtB,GAAgB,SAACuB,GAAD,OAAeA,EAAY,KAE3CxB,GAAY,SAACyB,GAAD,4BAAsBA,GAAtB,CAAoCJ,QAIlDvB,GAAmB,SAAC4B,GAAD,OAAavB,EAAauB,a,MC/BjDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e732a7fe.chunk.js","sourcesContent":["const data = [\n  {\n    id: 1,\n    image: './images/1.png',\n  },\n  {\n    id: 2,\n    image: './images/2.png',\n  },\n  {\n    id: 3,\n    image: './images/3.png',\n  },\n  {\n    id: 4,\n    image: './images/4.png',\n  },\n  {\n    id: 5,\n    image: './images/5.png',\n  },\n  {\n    id: 6,\n    image: './images/6.png',\n  },\n  {\n    id: 7,\n    image: './images/7.png',\n  },\n  {\n    id: 8,\n    image: './images/8.png',\n  },\n  {\n    id: 9,\n    image: './images/9.png',\n  },\n  {\n    id: 10,\n    image: './images/10.png',\n  },\n  {\n    id: 11,\n    image: './images/11.png',\n  },\n  {\n    id: 12,\n    image: './images/12.png',\n  },\n  {\n    id: 13,\n    image: './images/13.png',\n  },\n  {\n    id: 14,\n    image: './images/14.png',\n  },\n  {\n    id: 15,\n    image: './images/15.png',\n  },\n];\n\nexport default data;\n","import React from 'react';\n\nfunction Header({ currentScore, highestScore }) {\n  return (\n    <header>\n      <h1>Memory Card Game</h1>\n      <div className='scores'>\n        <h3 className='current'>Current score: {currentScore}</h3>\n        <h3 className='highest'>Highest score: {highestScore}</h3>\n      </div>\n      <p>Don't click an icon twice!</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Cards({ characters, handleClick }) {\n  const characterCards = characters.map((character) => {\n    const { image, id } = character;\n    return (\n      <div key={id} className='card'>\n        <img\n          src={image}\n          alt={characters.id}\n          className='icon'\n          onClick={() => handleClick(id)}\n        />\n      </div>\n    );\n  });\n\n  return <section className='basic-grid'>{characterCards}</section>;\n}\n\nexport default Cards;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport characters from './data';\nimport Header from './Header';\nimport Cards from './Cards';\n\nfunction App() {\n  const [charactersArray, setCharactersArray] = useState(characters);\n  const [gameFlow, setGameFlow] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highestScore, setHighestScore] = useState(0);\n\n  const shuffleArray = (arr) => {\n    const newArr = arr.slice();\n    for (let i = newArr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n    }\n    return newArr;\n  };\n\n  const handleClick = (move) => {\n    if (gameFlow.includes(move)) {\n      setCurrentScore(0);\n      setGameFlow([]);\n    } else {\n      setHighestScore((prevHighest) => {\n        return prevHighest === currentScore ? prevHighest + 1 : prevHighest;\n      });\n\n      setCurrentScore((prevScore) => prevScore + 1);\n\n      setGameFlow((prevGameFlow) => [...prevGameFlow, move]);\n    }\n\n    // Shuffling the gameboard.\n    setCharactersArray((prevArr) => shuffleArray(prevArr));\n  };\n\n  useEffect(() => {\n    // Persisting state to LocalStorage\n    const highest = localStorage.getItem('highestScore');\n    if (highest) {\n      setHighestScore(parseInt(highest));\n    }\n    // Random layour on mount\n    const shuffledArray = shuffleArray(characters);\n    setCharactersArray(shuffledArray);\n  }, []);\n\n  useEffect(() => {\n    // Updating LocalStorage when highestScore updates.\n    localStorage.setItem('highestScore', highestScore.toString());\n  }, [highestScore]);\n\n  return (\n    <>\n      <Header currentScore={currentScore} highestScore={highestScore} />\n      <Cards characters={charactersArray} handleClick={handleClick} />\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './base.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}